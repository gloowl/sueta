#include <iostream>
#include <vector>

const int mod = 1e9 + 7;

long long count_numbers(int n)
{
	std::vector<std::vector<long long>> dp(n + 1, std::vector<long long>(2, 0));

	dp[1][0] = 1;
	dp[1][1] = 1;

	for (int i = 2; i <= n; i++)
	{
		dp[i][0] = dp[i - 1][1] % mod;
		dp[i][1] = (dp[i - 1][0] + dp[i - 1][1]) % mod;
	}

	return (dp[n][0] + dp[n][1]);
}

int main()
{
	int n;
	std::cin >> n;

	std::cout << count_numbers(n) << '\n';

	return 0;
}

/*

4
0 0 0 0
0 0 0 1
0 0 1 0
0 0 1 1
0 1 0 0
0 1 0 1
0 1 1 0
0 1 1 1
1 0 0 0
1 0 0 1
1 0 1 0
1 0 1 1
1 1 0 0
1 1 0 1
1 1 1 0
1 1 1 1
output: 8

*/
