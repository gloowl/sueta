#include <iostream>
#include <vector>

const int mod = 1000000007;

long long countnumbers(int n)
{
	std::vector<std::vector<long long>> dp(n + 1, std::vector<long long>(2, 0));

	dp[1][0] = 1; // количество чисел с n=1 цифр, заканчивающихся на 0
	dp[1][1] = 1; // количество чисел с n=1 цифр, заканчивающихся на 1

	for (int i = 2; i <= n; i++)
	{
		dp[i][0] = dp[i - 1][1];												// число заканчивается на 0, предпоследняя цифра 1
		dp[i][1] = (dp[i - 1][0] + dp[i - 1][1]) % mod; // число заканчивается на 1, предпоследняя цифра может быть 0 или 1
	}

	return (dp[n][0] + dp[n][1]) % mod;
}

int main()
{
	int n;
	std::cin >> n;

	std::cout << countnumbers(n) << '\n';

	return 0;
}

/*

4
0 0 0 0
0 0 0 1
0 0 1 0
0 0 1 1
0 1 0 0
0 1 0 1
0 1 1 0
0 1 1 1
1 0 0 0
1 0 0 1
1 0 1 0
1 0 1 1
1 1 0 0
1 1 0 1
1 1 1 0
1 1 1 1
output: 8

*/